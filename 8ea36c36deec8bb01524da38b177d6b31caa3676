{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ba7e0f1a_f03e4e54",
        "filename": "project.py",
        "patchSetId": 6
      },
      "lineNbr": 3573,
      "author": {
        "id": 1096638
      },
      "writtenOn": "2024-12-18T22:27:05Z",
      "side": 1,
      "message": "If someone interrupts this in this section, the remaining state will be corrupted. I don\u0027t have a solution to this that will be efficient. vapier@, any suggestions?",
      "range": {
        "startLine": 3567,
        "startChar": 0,
        "endLine": 3573,
        "endChar": 39
      },
      "revId": "8ea36c36deec8bb01524da38b177d6b31caa3676",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dc98c26_4389c5e6",
        "filename": "project.py",
        "patchSetId": 6
      },
      "lineNbr": 3573,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2024-12-19T23:09:37Z",
      "side": 1,
      "message": "If we decide not to rename `subproject-objects` (currently done for consistency), the migration will be simpler. However, we would be left with inconsistent names. Do you guys think, this might be acceptable since it is internal to repo, and `docs/internal-fs-layout.md` has good docs for repo devs?",
      "parentUuid": "ba7e0f1a_f03e4e54",
      "range": {
        "startLine": 3567,
        "startChar": 0,
        "endLine": 3573,
        "endChar": 39
      },
      "revId": "8ea36c36deec8bb01524da38b177d6b31caa3676",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea38ccf3_20a3de42",
        "filename": "project.py",
        "patchSetId": 6
      },
      "lineNbr": 3573,
      "author": {
        "id": 1096638
      },
      "writtenOn": "2024-12-20T00:01:03Z",
      "side": 1,
      "message": "When one runs git submodule init (or submodule update --quiet), I believe there is no module-objects and all data object data is inside modules. Is that correct? \n\nIf so, we probably want to move to that direction. It\u0027s probably okay to leave old checkouts with symlinks (in that case, subproject-objects is okay with me), but new ones should respect curernt git behavior.",
      "parentUuid": "5dc98c26_4389c5e6",
      "range": {
        "startLine": 3567,
        "startChar": 0,
        "endLine": 3573,
        "endChar": 39
      },
      "revId": "8ea36c36deec8bb01524da38b177d6b31caa3676",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78e162cc_4d8455b2",
        "filename": "project.py",
        "patchSetId": 6
      },
      "lineNbr": 3573,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2024-12-21T00:00:36Z",
      "side": 1,
      "message": "\u003e When one runs git submodule init (or submodule update --quiet), I believe there is no module-objects and all data object data is inside modules. Is that correct? \n\u003e \n\nYes\n\n\u003e If so, we probably want to move to that direction. It\u0027s probably okay to leave old checkouts with symlinks (in that case, subproject-objects is okay with me), but new ones should respect curernt git behavior.\n\nWe\u0027d like to support using git submodule cmds to fetch/checkout subprojects and avoid any required migration. We did spend a couple of hrs talking about this internally, but we have a few concerns still and we are not sure on the right approach to solve. Here\u0027s some of them:\n\n- breaks existing functionality where submodules can be given as args for repo sync, for example `repo sync \u003cpath-to-submodule\u003e`\n- complicated and big refactor to determine old vs new behavior\n- repo worktree functionality will need additional changes to support using git submodule cmds to fetch/checkout subprojects.\n\nCan you share your ideas on how we can handle them?",
      "parentUuid": "ea38ccf3_20a3de42",
      "range": {
        "startLine": 3567,
        "startChar": 0,
        "endLine": 3573,
        "endChar": 39
      },
      "revId": "8ea36c36deec8bb01524da38b177d6b31caa3676",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61b2ad5d_c7e63a72",
        "filename": "project.py",
        "patchSetId": 6
      },
      "lineNbr": 3573,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2025-01-06T20:14:48Z",
      "side": 1,
      "message": "Also, if we leave `subproject-objects` as-is, the migration is much simpler as seen in PS8",
      "parentUuid": "78e162cc_4d8455b2",
      "range": {
        "startLine": 3567,
        "startChar": 0,
        "endLine": 3573,
        "endChar": 39
      },
      "revId": "8ea36c36deec8bb01524da38b177d6b31caa3676",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d61a220_4f44ce6e",
        "filename": "project.py",
        "patchSetId": 6
      },
      "lineNbr": 3573,
      "author": {
        "id": 1096638
      },
      "writtenOn": "2025-01-06T21:40:19Z",
      "side": 1,
      "message": "I believe your second concern is fully addressed with PS8.\n\nWe need to address your first concern - repo should be aware of all git submodules. I believe, if project-objects path is fixed (as I requested in the other comment), it should work again.\n\nAs for the third option, worktree is still experimental, so I\u0027m okay if we explicitly state submodules can\u0027t be used with worktrees (detecting such state early could be a bit tricky).",
      "parentUuid": "61b2ad5d_c7e63a72",
      "range": {
        "startLine": 3567,
        "startChar": 0,
        "endLine": 3573,
        "endChar": 39
      },
      "revId": "8ea36c36deec8bb01524da38b177d6b31caa3676",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef802e5e_7f51c9e9",
        "filename": "project.py",
        "patchSetId": 6
      },
      "lineNbr": 3573,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2025-01-06T22:10:29Z",
      "side": 1,
      "message": "\u003e If someone interrupts this in this section, the remaining state will be corrupted. I don\u0027t have a solution to this that will be efficient. vapier@, any suggestions?\n\n\nPS8 does not actually attempt to use `submodule update`. I was trying to address the above quoted concern by making the migration less complex, specifically by not renaming `subproject-objects` to `module-objects`.\n\nAdditionally, the if-else statement in `manifest_xml.py` at L2061 fixes a problem I discovered with PS7. In PS7, the first repo sync (with this change) would fetch into the `modules` directory, but it should actually continue to fetch into `subprojects` and then perform the checkout in `modules` after the migration.\n\nTo summarize, PS8 fixes the problem I discovered and also simplifies the migration process.\n\nThe concerns I laid out in my previous comment still stand with PS8 though.",
      "parentUuid": "6d61a220_4f44ce6e",
      "range": {
        "startLine": 3567,
        "startChar": 0,
        "endLine": 3573,
        "endChar": 39
      },
      "revId": "8ea36c36deec8bb01524da38b177d6b31caa3676",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f6fa0bd_9719d36d",
        "filename": "project.py",
        "patchSetId": 6
      },
      "lineNbr": 3573,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2025-01-27T22:26:31Z",
      "side": 1,
      "message": "@sokcevic@chromium.org any thoughts?",
      "parentUuid": "ef802e5e_7f51c9e9",
      "range": {
        "startLine": 3567,
        "startChar": 0,
        "endLine": 3573,
        "endChar": 39
      },
      "revId": "8ea36c36deec8bb01524da38b177d6b31caa3676",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2f717e1_3beebd3e",
        "filename": "project.py",
        "patchSetId": 6
      },
      "lineNbr": 3573,
      "author": {
        "id": 1096638
      },
      "writtenOn": "2025-01-28T00:07:03Z",
      "side": 1,
      "message": "Sorry for the delay, I lost track of this CL. I think I expected submodule update to be in play at some point, but it\u0027s okay if we leave it out. I would still suggest to make repo a bit more robust and to check if subproject-objects exists or not. Since git won\u0027t ever create `module-objects`, it doesn\u0027t make sense to worry about that one.\n\nThis is nit and optional, the rest lgtm.",
      "parentUuid": "2f6fa0bd_9719d36d",
      "range": {
        "startLine": 3567,
        "startChar": 0,
        "endLine": 3573,
        "endChar": 39
      },
      "revId": "8ea36c36deec8bb01524da38b177d6b31caa3676",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3f9a4d8_693600d0",
        "filename": "project.py",
        "patchSetId": 6
      },
      "lineNbr": 3586,
      "author": {
        "id": 1096638
      },
      "writtenOn": "2024-12-18T22:27:05Z",
      "side": 1,
      "message": "instead of using replace, you can just drop content until subproject-objects and use \"../../module-objects/\"",
      "range": {
        "startLine": 3584,
        "startChar": 0,
        "endLine": 3586,
        "endChar": 21
      },
      "fixSuggestions": [
        {
          "fixId": "267cf93e_c4bcd340",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "project.py",
              "range": {
                "startLine": 3584,
                "startChar": 0,
                "endLine": 3587,
                "endChar": 0
              },
              "replacement": "                    new_target \u003d \"../../module-objects/\" + target[len(\"../../subproject-objects/\"):]\n"
            }
          ]
        }
      ],
      "revId": "8ea36c36deec8bb01524da38b177d6b31caa3676",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c129b1e_2f3d273f",
        "filename": "project.py",
        "patchSetId": 6
      },
      "lineNbr": 3586,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2024-12-19T20:38:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3f9a4d8_693600d0",
      "range": {
        "startLine": 3584,
        "startChar": 0,
        "endLine": 3586,
        "endChar": 21
      },
      "revId": "8ea36c36deec8bb01524da38b177d6b31caa3676",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}