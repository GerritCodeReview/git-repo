{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "54e85603_f996c390",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 23,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "Nit: use `str` type instead. `Text` is deprecated; see https://docs.python.org/3/library/typing.html#typing.Text",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be201c20_05d28750",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 23,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "Nit: Add return type to be consistent with `RepoExitError`.",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "740a1c09_22e67cd9",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 23,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-20T23:24:54Z",
      "side": 1,
      "message": "Goog call",
      "parentUuid": "54e85603_f996c390",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06a2aa80_8bacafac",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 23,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-20T23:24:54Z",
      "side": 1,
      "message": "sg.",
      "parentUuid": "be201c20_05d28750",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5e9c0da_2d15380a",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 32,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "Why not make `project` a part of `RepoError`? If it\u0027s a part of `BaseRepoError`, it inherits to all child-classes and at least `RepoExitError`, which aggregates other errors, doesn\u0027t seem to need it. Am I missing something here?",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56c99be5_54fab9c4",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 32,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-20T23:24:54Z",
      "side": 1,
      "message": "Nope. this makes sense",
      "parentUuid": "c5e9c0da_2d15380a",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8fa54f2_443172bc",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 96,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "How is this different from `GitError`?",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60f64cbb_a51127ce",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 96,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-20T23:24:54Z",
      "side": 1,
      "message": "GitError is raised a bunch of places within git-repo. GitCommandError is meant to indicate that the error actually originated from the execution of a git command.",
      "parentUuid": "f8fa54f2_443172bc",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34f26a0f_b4cffff1",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 96,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-25T01:23:24Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "60f64cbb_a51127ce",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fba7e402_c78c6c73",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 102,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "Nit: Can we add typings for this too for consistency?",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "236b5ee4_a883239e",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 102,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-20T23:24:54Z",
      "side": 1,
      "message": "sure",
      "parentUuid": "fba7e402_c78c6c73",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "579c1f12_5356916b",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 112,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "Nit: This makes the type of `args` static-time ambiguous, i.e., it could be a list or a str. Why not use `\"[]\"` str instead?",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7775f80c_f7ea3084",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 112,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-20T23:24:54Z",
      "side": 1,
      "message": "sg.",
      "parentUuid": "579c1f12_5356916b",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b44e0b9_3078f7f0",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 114,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "Is there a reason for not printing the `message` here? Having the failure message here would be helpful.",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6ae60d5_bf9f569c",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 114,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-20T23:24:54Z",
      "side": 1,
      "message": "command and message are the same thing. Message is passed into GitError and stored as command.",
      "parentUuid": "2b44e0b9_3078f7f0",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6585b569_018f725d",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 114,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-21T18:23:53Z",
      "side": 1,
      "message": "Good call. I updated GitError to use `message` instead of `command` - it was poorly named",
      "parentUuid": "a6ae60d5_bf9f569c",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "379a9a80_5c6e91be",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 131,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "I\u0027m curious what context this is used under. Say I have permissions issue and I cannot download 1/5 projects in my manifest. Shouldn\u0027t repo be still downloading the remaining 4/5 projects? Or is it expected to exit here?",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86db99a9_02bf55d9",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 131,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-20T23:24:54Z",
      "side": 1,
      "message": "Not sure, it is an existing error - just took a cue from the fact that main.py handles it (assumed that it is supposed to exit the program).",
      "parentUuid": "379a9a80_5c6e91be",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2267584e_20a9941f",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 131,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-25T01:23:24Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "86db99a9_02bf55d9",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a30d1d3a_19260b38",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 152,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "Should this take `**kwargs` too?",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64c6dac9_9a65dc8b",
        "filename": "error.py",
        "patchSetId": 15
      },
      "lineNbr": 152,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-20T23:24:54Z",
      "side": 1,
      "message": "yup",
      "parentUuid": "a30d1d3a_19260b38",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6947fcc0_2083382f",
        "filename": "main.py",
        "patchSetId": 15
      },
      "lineNbr": 441,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "We\u0027re aggregating these errors in our go/repo-dashboard so I\u0027m wondering if adding the project name to the traces log will affect that. Say if 100 different projects have the same error message, since the project name is different here, our error table will count them as 100 different errors, wouldn\u0027t it?\n\nNot an expert in the dashboard, Maybe Joanna might have a better opinion on this.",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bec34cd9_d7e9b937",
        "filename": "main.py",
        "patchSetId": 15
      },
      "lineNbr": 441,
      "author": {
        "id": 1047143
      },
      "writtenOn": "2023-07-25T17:53:57Z",
      "side": 1,
      "message": "Yes we\u0027d get 100 \"different\" errors for the error that is actually the same.\n\nWe could feed a \"fmt\" value into ErrorEvent which is just the skeleton string and a %s placeholder for the `project` and that\u0027s what would get logged in the `err_msg_fmt` column. although I assume having data on the subprojects that \"triggered\" this error would be useful in debugging...",
      "parentUuid": "6947fcc0_2083382f",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0648c7de_a88c477a",
        "filename": "main.py",
        "patchSetId": 15
      },
      "lineNbr": 441,
      "author": {
        "id": 1047143
      },
      "writtenOn": "2023-07-25T22:00:01Z",
      "side": 1,
      "message": "We can always update our dashboards to parse this string, but that\u0027s not ideal and I think we should consider other options before doing this",
      "parentUuid": "bec34cd9_d7e9b937",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5c1e64b_33e5bb3a",
        "filename": "main.py",
        "patchSetId": 15
      },
      "lineNbr": 441,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-25T23:29:33Z",
      "side": 1,
      "message": "We could use JSON so that it would be easy for dashboards to parse?",
      "parentUuid": "0648c7de_a88c477a",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3c13473_90b329a0",
        "filename": "main.py",
        "patchSetId": 15
      },
      "lineNbr": 441,
      "author": {
        "id": 1047143
      },
      "writtenOn": "2023-07-26T00:26:31Z",
      "side": 1,
      "message": "The only alternative i can think of is we add a `project` to the git_trace dict and then add another field in http://shortn/_hbqFdjqvyn to hold it. I don\u0027t know if we can justify that, given we can just parse this on our end,  so i\u0027m fine with doing this.",
      "parentUuid": "0648c7de_a88c477a",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3710bc72_085ed269",
        "filename": "project.py",
        "patchSetId": 15
      },
      "lineNbr": 64,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "Do we still need the success parameter? Can success just be `not errors`?",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "274d930f_ff9dee4f",
        "filename": "project.py",
        "patchSetId": 15
      },
      "lineNbr": 64,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-21T18:11:47Z",
      "side": 1,
      "message": "I\u0027ll make \u0027success\u0027 a property (it\u0027s exactly that not error) ...",
      "parentUuid": "3710bc72_085ed269",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2efa73f5_2a54804a",
        "filename": "project.py",
        "patchSetId": 15
      },
      "lineNbr": 1471,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "Why not make the fn throw an error? If the fn is not dependent on the content of this list and will return after appending an error, I think it\u0027s cleaner for the fn to simply throw an error when something goes wrong.",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fdbbc94_2c9b2631",
        "filename": "project.py",
        "patchSetId": 15
      },
      "lineNbr": 1471,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "Do not use mutable default args. Python does not re-construct this list everytime the fn is called and it is confusing to read; see https://docs.python-guide.org/writing/gotchas/#mutable-default-arguments",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5dcfaa01_4f4a8b77",
        "filename": "project.py",
        "patchSetId": 15
      },
      "lineNbr": 1471,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-20T23:24:54Z",
      "side": 1,
      "message": "good call. Thanks",
      "parentUuid": "5fdbbc94_2c9b2631",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61dc89e9_5b290b43",
        "filename": "project.py",
        "patchSetId": 15
      },
      "lineNbr": 1471,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-20T23:24:54Z",
      "side": 1,
      "message": "Mostly because there are a number of different execution paths for Sync_LocalHalf and I would need to ensure that all of them work. (i.e. it is called within this file in a couple of places, inside of subcommands sync.py and start.py)\n\nYou are not wrong though.",
      "parentUuid": "2efa73f5_2a54804a",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f65bb6e2_203e62b6",
        "filename": "project.py",
        "patchSetId": 15
      },
      "lineNbr": 1480,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "Nit: dedup",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d868fdb_f4a47b05",
        "filename": "project.py",
        "patchSetId": 15
      },
      "lineNbr": 1480,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-21T18:11:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f65bb6e2_203e62b6",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3caba2cd_9394fc80",
        "filename": "project.py",
        "patchSetId": 15
      },
      "lineNbr": 1510,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "Nit: dedup",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c102d88_ced80e95",
        "filename": "project.py",
        "patchSetId": 15
      },
      "lineNbr": 1510,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-20T23:24:54Z",
      "side": 1,
      "message": "sg",
      "parentUuid": "3caba2cd_9394fc80",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2d0c273_f59fe4cf",
        "filename": "project.py",
        "patchSetId": 15
      },
      "lineNbr": 1615,
      "author": {
        "id": 1148045
      },
      "writtenOn": "2023-07-20T22:20:46Z",
      "side": 1,
      "message": "Nit: Can we dedupe this somehow? Maybe just read the errors from syncbuf or even simply writing the error message to a variable and using it here?",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e0c7aa6_81ba8810",
        "filename": "project.py",
        "patchSetId": 15
      },
      "lineNbr": 1615,
      "author": {
        "id": 1159376
      },
      "writtenOn": "2023-07-20T23:24:54Z",
      "side": 1,
      "message": "sg.",
      "parentUuid": "e2d0c273_f59fe4cf",
      "revId": "6a1ca58a5775c0223d03ddc113e10830e611a053",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}