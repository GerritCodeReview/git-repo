{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "025b6a3d_f0531e4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1075811
      },
      "writtenOn": "2022-01-24T19:51:23Z",
      "side": 1,
      "message": "IMO, vapier@ is the best person to review this change. From superproject point of view, this may not have an impact because of the following:\n\nif a project has a revision id is set, it will skip updating it. First time it sees a project it will update the revision id and afterwars if the same project comes up because of another manifest and if the project already has the revsion id, it won\u0027t update it.\n",
      "revId": "8f203b60445394402b5dfecf17f681d6bb10ccd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e7f9d37_42025c61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2022-01-24T22:20:38Z",
      "side": 1,
      "message": "it sounds like you\u0027re just adding support for including a manifest from a manifest.  is there something else not covered ?\n\nplease see:\nhttps://crbug.com/gerrit/11685\nhttps://gerrit-review.googlesource.com/c/git-repo/+/243588",
      "revId": "8f203b60445394402b5dfecf17f681d6bb10ccd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a65a5e39_5a749052",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1133306
      },
      "writtenOn": "2022-01-24T22:53:51Z",
      "side": 1,
      "message": "What this does:\n - implement including a manifest from a manifest\n  - without changing the current \u003cinclude/\u003e syntax and\n  - using a layout compatible with the superproject and git modules work.\n - allow a way to declare that the inner manifest should be explicitly shareable (deferring the actual process of doing so for this CL)\n - does not attempt to share the git objects between the various manifest trees (.repo/projects and .repo/project-objects are not shared).\n \n243588 looks more focused on sharing the objects and changing the include syntax.",
      "parentUuid": "5e7f9d37_42025c61",
      "revId": "8f203b60445394402b5dfecf17f681d6bb10ccd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69c21bf8_80658a99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1133306
      },
      "writtenOn": "2022-01-25T19:58:28Z",
      "side": 1,
      "message": "Following up more:\n\n - \u003cinnertree/\u003e says \"put an instance of the named manifest ${HERE}\", rather than simply including the specified file in the current manifest (\u003cinclude/\u003e).  Since it creates a new element in the XML tree, it felt cleaner to use a different element type.\n - innertree sharing is an optimization to reduce the size of the checked out innertrees. (I know that some other innertree has the version of the thing [such as \"build-system\"], use that inner tree ${HERE}.)  That design is still somewhat pending: we can drop that attribute for the time being if desired.\n - \"does not attempt to share\" should be read as \"defers this for now\".  .repo/projects must be separate, and .repo/project-objects *should* be shared, but I was deferring that until after analyzing the complications of object sharing with differing remotes.\n \nWRT object sharing, we do *not* need to support remotes of the same `name` with different/colliding project namespaces.  We will happily require that one of the remotes be renamed before that innertree can coexist with the other.",
      "parentUuid": "a65a5e39_5a749052",
      "revId": "8f203b60445394402b5dfecf17f681d6bb10ccd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1e59676_e17a1395",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1133306
      },
      "writtenOn": "2022-02-08T19:30:19Z",
      "side": 1,
      "message": "I believe that we resolved this in our discussions.",
      "parentUuid": "69c21bf8_80658a99",
      "revId": "8f203b60445394402b5dfecf17f681d6bb10ccd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}