{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fa415227_ff2773dc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-10-24T20:20:59Z",
      "side": 1,
      "message": "`Bug: https://g-issues.gerritcodereview.com/issues/40010331`",
      "revId": "3df1e107da8622cda3e0ca0aeda4561fc3249ac0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e5f5c52_80bf52f9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1091855
      },
      "writtenOn": "2023-10-24T21:29:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa415227_ff2773dc",
      "revId": "3df1e107da8622cda3e0ca0aeda4561fc3249ac0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b88bb305_96d5d2b1",
        "filename": "manifest_xml.py",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-10-24T20:20:59Z",
      "side": 1,
      "message": "i think you\u0027re basically putting a bandaid on top of this ?  seems like we want to undo this, or fix it if it\u0027s misbehaving.",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 200,
        "endChar": 67
      },
      "revId": "3df1e107da8622cda3e0ca0aeda4561fc3249ac0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "968c5a4a_05e5875a",
        "filename": "manifest_xml.py",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1091855
      },
      "writtenOn": "2023-10-24T21:28:39Z",
      "side": 1,
      "message": "Vanilla urllib itself still won\u0027t deal with git@github.com:foo type URLs - it still tries to join them together:\n\n```\n\u003e\u003e\u003e u \u003d urllib.parse.urljoin(\u0027https://foo.com/bar\u0027, \u0027ssh://git@github.com/foo\u0027)\n\u003e\u003e\u003e u\n\u0027ssh://git@github.com/foo\u0027\n```\n\nvs\n```\n\u003e\u003e\u003e u \u003d urllib.parse.urljoin(\u0027https://foo.com/bar\u0027, \u0027git@github.com:foo\u0027)\n\u003e\u003e\u003e u\n\u0027https://foo.com/git@github.com:foo\u0027\n```\n\nEither way, we need to deal with it explicitly, it seems.",
      "parentUuid": "b88bb305_96d5d2b1",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 200,
        "endChar": 67
      },
      "revId": "3df1e107da8622cda3e0ca0aeda4561fc3249ac0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39e626b2_d757bba8",
        "filename": "manifest_xml.py",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1091855
      },
      "writtenOn": "2023-10-24T21:29:41Z",
      "side": 1,
      "message": "sorry, should `git@github.com:foo` fetch references. Not actually a URL ðŸ˜Š",
      "parentUuid": "968c5a4a_05e5875a",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 200,
        "endChar": 67
      },
      "revId": "3df1e107da8622cda3e0ca0aeda4561fc3249ac0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ee8df5f_a699ed2e",
        "filename": "manifest_xml.py",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-10-24T22:05:59Z",
      "side": 1,
      "message": "what i mean is that this comment block specifically calls out trying to handle schema-less URIs by sticking in `gopher://`.  but you\u0027re adding code to handle schema-less URIs.  which means this gopher logic is basically dead code now right ?",
      "parentUuid": "39e626b2_d757bba8",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 200,
        "endChar": 67
      },
      "revId": "3df1e107da8622cda3e0ca0aeda4561fc3249ac0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09f540b7_2a42d804",
        "filename": "manifest_xml.py",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1091855
      },
      "writtenOn": "2023-10-24T22:24:51Z",
      "side": 1,
      "message": "No, it doesn\u0027t appear to be the case.  Bearing in mind that this is dealing with the `manifestUrl` lacking the schema, not the `fetchUrl`.  eg:\n\n```\n\u003e\u003e\u003e import urllib.parse\n\u003e\u003e\u003e urllib.parse.urljoin(\u0027foo.com/manifest\u0027, \u0027git@github.com\u0027)\n\u0027foo.com/git@github.com\u0027\n\u003e\u003e\u003e urllib.parse.urljoin(\u0027foo.com/manifest\u0027, \u0027https://github.com\u0027)\n\u0027https://github.com\u0027\n\u003e\u003e\u003e urllib.parse.urljoin(\u0027gopher://foo.com/manifest\u0027, \u0027git@github.com\u0027)\n\u0027gopher://foo.com/git@github.com\u0027\n```\n\nIt looks like this code was introduced ~2015 in https://gerrit.googlesource.com/git-repo/+/cb07ba7e3d466a98d0af0771b4f3e21116d69898 to simplify dealing with the manifestUrl.  With the setup as is we get fun stuff like:\n\n```\n\u003e\u003e\u003e urllib.parse.urljoin(\u0027gopher://foo.com/manifest\u0027, \u0027/foo\u0027)\n\u0027gopher://foo.com/foo\u0027\n\u003e\u003e\u003e urllib.parse.urljoin(\u0027foo.com/manifest\u0027, \u0027/foo\u0027)\n\u0027/foo\u0027\n```\n\nI\u0027ve got to confess that I\u0027m not super familiar with details of how `urljoin()` is intended to work here, but either way it looks like we need to separately special case `git@github.com` type URLs",
      "parentUuid": "1ee8df5f_a699ed2e",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 200,
        "endChar": 67
      },
      "revId": "3df1e107da8622cda3e0ca0aeda4561fc3249ac0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ae8cd0e_d7052f9e",
        "filename": "manifest_xml.py",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-10-25T16:48:33Z",
      "side": 1,
      "message": "the point of urljoin is to let people specify a base/full URI in one place and use relative paths everywhere else, and the full URIs will be generated on the fly.  so we don\u0027t want to return early.\n\ninstead of returning early, can\u0027t you add the missing schema, and then fall thru to the remaining code path ?\n\n```\no \u003d urllib.parse.urlsplit(url)\nif not o.scheme:\n    # Assume it\u0027s a scp-like URI that git supports.\n    # https://git-scm.com/book/en/v2/Git-on-the-Server-The-Protocols#_the_ssh_protocol\n    url \u003d f\"ssh://{url}\"\n```",
      "parentUuid": "09f540b7_2a42d804",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 200,
        "endChar": 67
      },
      "revId": "3df1e107da8622cda3e0ca0aeda4561fc3249ac0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}