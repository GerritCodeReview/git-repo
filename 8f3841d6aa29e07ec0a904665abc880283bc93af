{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4b9bda98_4c6d56de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2025-01-07T15:43:05Z",
      "side": 1,
      "message": "i don\u0027t think this is the right trade-off.  the point of repo is to get a source checkout and let people develop it, and keep it up to date.  if they make a change and it\u0027s merged, they shouldn\u0027t silently get into a wedged state.  the referenced change is addressing that exact scenario.  it isn\u0027t that people are trying to run git rebase themselves.\n\n1. start a branch\n2. create+upload a change\n3. change is merged\n4. local branch never updates because it can\u0027t rebase onto the newer one\n\nnow the dev has a project that is wedged.  repo sync doesn\u0027t fix it, nor does it error.\n\ni made https://issuetracker.google.com/issues/193798453 public since it doesn\u0027t really have any secret details in it.  that way you can see the discussion that lead to the previous change.",
      "revId": "8f3841d6aa29e07ec0a904665abc880283bc93af",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "293f6b64_9725df29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2025-01-08T00:29:03Z",
      "side": 1,
      "message": "\u003e i don\u0027t think this is the right trade-off.  the point of repo is to get a source checkout and let people develop it, and keep it up to date.  if they make a change and it\u0027s merged, they shouldn\u0027t silently get into a wedged state.  the referenced change is addressing that exact scenario.  it isn\u0027t that people are trying to run git rebase themselves.\n\u003e \n\u003e 1. start a branch\n\u003e 2. create+upload a change\n\nUploading changes does not work anyway when a project is shallow cloned? In most cases folks don\u0027t expect this scenario to work when they ask repo to shallow clone a project. The change I referenced (Ie34c5d860) essentially broke shallow clones with repo when revision is a stale SHA as it ends up doing a full fetch.\n\n\u003e 3. change is merged\n\u003e 4. local branch never updates because it can\u0027t rebase onto the newer one\n\u003e \n\u003e now the dev has a project that is wedged.  repo sync doesn\u0027t fix it, nor does it error.\n\u003e \n\u003e i made https://issuetracker.google.com/issues/193798453 public since it doesn\u0027t really have any secret details in it.  that way you can see the discussion that lead to the previous change.",
      "parentUuid": "4b9bda98_4c6d56de",
      "revId": "8f3841d6aa29e07ec0a904665abc880283bc93af",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fcb9c83a_fd2ec4c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3646394
      },
      "writtenOn": "2025-01-08T00:55:37Z",
      "side": 1,
      "message": "dan",
      "revId": "8f3841d6aa29e07ec0a904665abc880283bc93af",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6880e1bd_9752d117",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1096638
      },
      "writtenOn": "2025-01-09T17:25:11Z",
      "side": 1,
      "message": "\u003e Uploading changes does not work anyway when a project is shallow cloned? \n\nHmm, I don\u0027t think this is correct - you should be able to create new commits and push them to remote, therefore you should be able to create Gerrit changes.\n\nLet\u0027s step back a bit - in the commit message, you mentioned that \"this check will fail when the upstream ref becomes stale\" - could you file a bug that contains a bit more information about the issue you are trying to fix? e.g. is it purerly to skip fetching unneeded data, or there\u0027s actual error. We can move discussion there and see if it makes sense to move forward with this CL or not.",
      "parentUuid": "293f6b64_9725df29",
      "revId": "8f3841d6aa29e07ec0a904665abc880283bc93af",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ea161f3_00b231ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2025-01-13T20:59:25Z",
      "side": 1,
      "message": "\u003e \u003e Uploading changes does not work anyway when a project is shallow cloned? \n\u003e \n\u003e Hmm, I don\u0027t think this is correct - you should be able to create new commits and push them to remote, therefore you should be able to create Gerrit changes.\n\nYou are right. I assumed Gerrit didn\u0027t allow that.\n\n\u003e \n\u003e Let\u0027s step back a bit - in the commit message, you mentioned that \"this check will fail when the upstream ref becomes stale\" - could you file a bug that contains a bit more information about the issue you are trying to fix? e.g. is it purerly to skip fetching unneeded data, or there\u0027s actual error.\n\nDone. https://issues.gerritcodereview.com/issues/389729362\nIt is mainly to skip fetching unwanted data. This bug is particularly painful in use-cases such as in CI where a *huge* project is configured to be shallow cloned in the manifest, but ends up being fetched fully.\n\n\u003e We can move discussion there and see if it makes sense to move forward with this CL or not.",
      "parentUuid": "6880e1bd_9752d117",
      "revId": "8f3841d6aa29e07ec0a904665abc880283bc93af",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25109003_36cddf5c",
        "filename": "project.py",
        "patchSetId": 1
      },
      "lineNbr": 2413,
      "author": {
        "id": 1096638
      },
      "writtenOn": "2025-01-06T22:02:38Z",
      "side": 1,
      "message": "nit: Similar check is in _ApplyCloneBundle, let\u0027s extract this to a method and reuse.",
      "range": {
        "startLine": 2413,
        "startChar": 16,
        "endLine": 2413,
        "endChar": 71
      },
      "revId": "8f3841d6aa29e07ec0a904665abc880283bc93af",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc7146db_b7034632",
        "filename": "project.py",
        "patchSetId": 1
      },
      "lineNbr": 2413,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2025-01-09T16:59:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25109003_36cddf5c",
      "range": {
        "startLine": 2413,
        "startChar": 16,
        "endLine": 2413,
        "endChar": 71
      },
      "revId": "8f3841d6aa29e07ec0a904665abc880283bc93af",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}