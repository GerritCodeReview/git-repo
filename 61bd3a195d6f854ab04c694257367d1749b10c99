{
  "comments": [
    {
      "key": {
        "uuid": "1a1dabaa_d6c3103a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2018-05-24T05:07:25Z",
      "side": 1,
      "message": "Just to clarify, do you mean that this xml was generated by some external tool and will cause repo to fail?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 20
      },
      "revId": "61bd3a195d6f854ab04c694257367d1749b10c99",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a104a145_2f65a3e6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1002975
      },
      "writtenOn": "2018-05-24T05:46:46Z",
      "side": 1,
      "message": "\u003e Just to clarify, do you mean that this xml was generated by some external tool and will cause repo to fail?\n\nSorry, this is actually not the example that caused problems with the external tool. The subsequent \u003cproject\u003e definition was not there. I can update the description to be clearer.\n\n\nThe actual situation was the non-repo tool parsed this manifest by first scanning for \"remove-project\" elements, applied those without error if the project didn\u0027t exist, then scanned through all the \"project\" elements. We were trying to remove the \"bar\" project but it would end up still there because of the way the tool behaved. However, locally the repo tool did what we expected.",
      "parentUuid": "1a1dabaa_d6c3103a",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 20
      },
      "revId": "61bd3a195d6f854ab04c694257367d1749b10c99",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}