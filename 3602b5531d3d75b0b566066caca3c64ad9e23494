{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "486607e4_a9e1aff8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-10-02T18:40:17Z",
      "side": 1,
      "message": "please scope your commits.  this would be `tests:`.",
      "revId": "3602b5531d3d75b0b566066caca3c64ad9e23494",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23b68315_544f93c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1167921
      },
      "writtenOn": "2023-10-02T20:05:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "486607e4_a9e1aff8",
      "revId": "3602b5531d3d75b0b566066caca3c64ad9e23494",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fe17edb_c0a0b2b8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-10-02T18:40:17Z",
      "side": 1,
      "message": "we use `Bug:` tags in this project",
      "revId": "3602b5531d3d75b0b566066caca3c64ad9e23494",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "283fcd23_069a3ed5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1167921
      },
      "writtenOn": "2023-10-02T20:05:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8fe17edb_c0a0b2b8",
      "revId": "3602b5531d3d75b0b566066caca3c64ad9e23494",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cdd564f_4364646d",
        "filename": "tests/conftest.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-10-02T18:40:17Z",
      "side": 1,
      "message": "```suggestion\n    \"\"\"Set HOME to a temporary directory, avoiding user\u0027s .gitconfig.\n```\n\nplease follow docstring standards",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 37,
        "endChar": 66
      },
      "revId": "3602b5531d3d75b0b566066caca3c64ad9e23494",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf404115_e6a664e2",
        "filename": "tests/conftest.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1167921
      },
      "writtenOn": "2023-10-02T20:05:05Z",
      "side": 1,
      "message": "Done. Thanks for catching that. I use a different style in other projects and forgot to context switch.",
      "parentUuid": "0cdd564f_4364646d",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 37,
        "endChar": 66
      },
      "revId": "3602b5531d3d75b0b566066caca3c64ad9e23494",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b49761b6_aecf0ee8",
        "filename": "tests/conftest.py",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-10-02T18:40:17Z",
      "side": 1,
      "message": "shouldn\u0027t we `yield` and not return anything ?",
      "revId": "3602b5531d3d75b0b566066caca3c64ad9e23494",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab5f9b4c_e0ec5d63",
        "filename": "tests/conftest.py",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1167921
      },
      "writtenOn": "2023-10-02T20:05:05Z",
      "side": 1,
      "message": "`yield` fixtures are only needed if there\u0027s some cleanup needed after yielding a result. Since the temp dir and monkeysession already handle tearing down the state, there\u0027s no need for a yield fixture and a simple return is fine (and preferred).",
      "parentUuid": "b49761b6_aecf0ee8",
      "revId": "3602b5531d3d75b0b566066caca3c64ad9e23494",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8998a262_d5f3059b",
        "filename": "tests/conftest.py",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-10-03T03:08:03Z",
      "side": 1,
      "message": "preferred according to what ?  if the value is never used, we shouldn\u0027t be returning it as it\u0027ll just confuse people.",
      "parentUuid": "ab5f9b4c_e0ec5d63",
      "revId": "3602b5531d3d75b0b566066caca3c64ad9e23494",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03c87647_c75d6afe",
        "filename": "tests/conftest.py",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1167921
      },
      "writtenOn": "2023-10-03T14:41:43Z",
      "side": 1,
      "message": "The [pytest fixtures docs](https://docs.pytest.org/en/latest/how-to/fixtures.html) don\u0027t explicitly state that a simple return is preferred, but looking at many of the examples, `yield` is only used when some cleanup follows. In all other cases, `return` is used.\n\n\u003e if the value is never used, we shouldn\u0027t be returning it as it\u0027ll just confuse people.\n\nMy reasoning was this - yes, it\u0027s unused in the current state, but should a future function wish to reference the home directory, perhaps to test something with `.gitconfig`, it can solicit `alt_home`. For example:\n\n```\ndef test_corrupt_gitconfig(alt_home):\n  alt_home.joinpath(\u0027.gitconfig\u0027).write_text(\u0027bad syntax\u0027)\n  ...\n```\n\nOr less aggressively:\n\n```\ndef test_files_in_home(alt_home):\n  ...\n  assert len(list(alt_home.glob(\u0027.gitignore_global\u0027))) \u003d\u003d 1\n```\n\nIn my experience, if a fixture creates some thing, it should return a reference to that thing if there\u0027s any likelihood that a caller of that fixture might find it useful.\n\nThat said, I notice that the \u0027corrupt_gitconfig\u0027 example points to a possible problem with this session-scoped fixture. Any change to the home directory is going to have an effect across tests. Maybe the fixture shouldn\u0027t be session-scoped.\n\nI\u0027ve also realized since writing this that the technique doesn\u0027t honor Windows, where USERPROFILE needs to be set to affect `~`/`os.path.expanduser`. I see I\u0027ve [dealt with this problem before](https://github.com/pypa/setuptools/commit/f866311d60f54499c3637309e3429780d8c8f218), suggesting maybe this behavior should be generalized into a library.\n\nIn light of these concerns, I\u0027m going to revisit the approach altogether.",
      "parentUuid": "8998a262_d5f3059b",
      "revId": "3602b5531d3d75b0b566066caca3c64ad9e23494",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90b9b3e8_8b628f15",
        "filename": "tests/conftest.py",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1167921
      },
      "writtenOn": "2023-10-03T15:35:18Z",
      "side": 1,
      "message": "I explored creating a re-usable plugin for pytest with an `alt_home` fixture (https://pypi.org/project/pytest-home), but then I learned that a function-scoped fixture isn\u0027t viable in this environment because the tests utilize unittest constructs and the `setupClass` (where git operations are run) happens before any function-scoped fixture. Therefore, it\u0027s not possible to simply utilize a function-scoped fixture.",
      "parentUuid": "03c87647_c75d6afe",
      "revId": "3602b5531d3d75b0b566066caca3c64ad9e23494",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53d05bad_91f0b001",
        "filename": "tests/conftest.py",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1167921
      },
      "writtenOn": "2023-10-03T15:43:50Z",
      "side": 1,
      "message": "In the latest patch, I\u0027ve addressed the concern, no longer returning any value for `alt_home` and simply relying on the side-effect to avoid confusing users. I\u0027ve also incorporated Windows compatibility.",
      "parentUuid": "90b9b3e8_8b628f15",
      "revId": "3602b5531d3d75b0b566066caca3c64ad9e23494",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}