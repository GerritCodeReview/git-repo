{
  "comments": [
    {
      "key": {
        "uuid": "AAALqH///xk\u003d",
        "filename": "subcmds/status.py",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2012-11-18T11:02:54Z",
      "side": 1,
      "message": "Question on previous patch set is not answered.  Why is changing directory necessary?",
      "revId": "7a9311a265f509caf1cdb996ad1f6805c9304b16",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALqH///vI\u003d",
        "filename": "subcmds/status.py",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2012-11-19T03:28:03Z",
      "side": 1,
      "message": "Since _FindOrphans is now a member of the Status class, it will have access to self.manifest.topdir value.  If it\u0027s possible to pass an absolute path into the glob function, you could use os.path.join to make the path from self.manifest.topdir",
      "parentUuid": "AAALqH///xk\u003d",
      "revId": "7a9311a265f509caf1cdb996ad1f6805c9304b16",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALxH////s\u003d",
        "filename": "subcmds/status.py",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1011862
      },
      "writtenOn": "2012-11-20T16:11:27Z",
      "side": 1,
      "message": "Yes, it looks like glob will take absolute pathname, however I believe this will make overall logic much more complicated.  GetProjects returns values relative to the root and so does glob (once directory is changed), which I find easier to read.",
      "parentUuid": "AAALqH///vI\u003d",
      "revId": "7a9311a265f509caf1cdb996ad1f6805c9304b16",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALxH////o\u003d",
        "filename": "subcmds/status.py",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1011862
      },
      "writtenOn": "2012-11-20T16:11:27Z",
      "side": 1,
      "message": "Done.  Explanation now present with original question.",
      "parentUuid": "AAALqH///xk\u003d",
      "revId": "7a9311a265f509caf1cdb996ad1f6805c9304b16",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "L9I5u28I",
        "filename": "subcmds/status.py",
        "patchSetId": 6
      },
      "lineNbr": 199,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2012-11-27T03:18:02Z",
      "side": 1,
      "message": "Is there anything between line 163 and here that can cause the method to fail?  If so it would be better to enclose it all in a `try` block and then put `os.chdir(orig_path)` in the `finally` block.",
      "revId": "7a9311a265f509caf1cdb996ad1f6805c9304b16",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "L9oxFB0c",
        "filename": "subcmds/status.py",
        "patchSetId": 6
      },
      "lineNbr": 199,
      "author": {
        "id": 1011862
      },
      "writtenOn": "2012-11-27T19:51:11Z",
      "side": 1,
      "message": "As far as I can tell from documentation, no exceptions are thrown.  Reworking it slightly anyway (move chdir closer to _FindOrphans loop) and adding try/finally for safety against possibly careless maintenance programming.",
      "parentUuid": "L9I5u28I",
      "revId": "7a9311a265f509caf1cdb996ad1f6805c9304b16",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}