{
  "comments": [
    {
      "key": {
        "uuid": "aa59f689_23e56835",
        "filename": "platform_utils.py",
        "patchSetId": 9
      },
      "lineNbr": 173,
      "author": {
        "id": 1015513
      },
      "writtenOn": "2017-05-29T12:41:25Z",
      "side": 1,
      "message": "I guess this should also note that Symbolic Links on Windows only work for Administrators, or users that were granted SeCreateSymbolicLinkPrivilege, see\n\nhttps://github.com/esrlabs/git-repo#setup-steps-for-microsoft-windows\n\nIn general, a more portable / safer implementation would use Junctions for folders and Hardlinks for files.",
      "revId": "d5cec5e752821ca2710101b626b3a3ca07fdb7f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b55f3568_ffc3d639",
        "filename": "platform_utils.py",
        "patchSetId": 9
      },
      "lineNbr": 173,
      "author": {
        "id": 1031563
      },
      "writtenOn": "2017-05-29T16:38:15Z",
      "side": 1,
      "message": "A few (in no particular order) notes:\n\n* I would not recommend following the instructions on https://github.com/esrlabs/git-repo#setup-steps-for-microsoft-windows. Turning off UAC is too much, all is required is (for admin users) to run \"repo\" commands that need to create symbolic links (mostly repo init and repo sync) in a command prompt with \"Run As Adminstrator\". Turning off UAC might also not be allowed by group policy, depending on the organization (for good reasons).\n\n* I agree it would be nice to be able to use hardlinks/junctions folders, but these a not a 1-1 replacements for symbolic links:\n\n* Hardlinks don\u0027t have the notion of \"target\" of the link, so it is impossible (in general) to provide a \"realpath\" primitive for them, for example.\n\n*  Deleting the \"target\" of hardlink does not make \"links\" become invalid (the links are just additional ref counts on the original file). This can lead to situations (delete + re-create) where the \"link\" is lost.\n\n* As for junction points, as mentioned, not only they work for directories only, but the target is always an absolute path (there is no such thing as a relative junction point). This has many subtle implications on the implementation side (repo), but also for end-users: for example, moving a repository directory to a new location make junction points point to an \"invalid\" directory (since paths are absolute).\n\n* All in all, none of the 2 options (symbolic links or hardlink+junction points) are perfect solutions, but I think that using symbolic links is the better option, as it matches the repo semantics closer. The main (only?) drawback is that some commands have to be run \"as administrator\"\n\n* One last note: The most recent version of Windows 10 (creator edition) has lifted the \"run as admin\" restriction (see https://blogs.windows.com/buildingapps/2016/12/02/symlinks-windows-10), so things are only get better over time.",
      "parentUuid": "aa59f689_23e56835",
      "revId": "d5cec5e752821ca2710101b626b3a3ca07fdb7f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd46db09_011dde1f",
        "filename": "platform_utils.py",
        "patchSetId": 9
      },
      "lineNbr": 173,
      "author": {
        "id": 1015513
      },
      "writtenOn": "2017-05-29T19:43:31Z",
      "side": 1,
      "message": "Some answers:\n\n* I agree turning off UAC in general is not a good idea from the security perspective. But I find it funny that you say \"Turning off UAC might also not be allowed by group policy\", which is true, but your whole change about using Symbolic Links counts on having admin rights anyway. So to be fair, you should also say \"Creating Symbolic Links might also not be allowed by group policy\" (which actually is the case in our company).\n\n* You have valid points about Symbolic Links not being equivalent to Junctions + Hardlinks, and I agree that from a technical perspective using Symbolic Links would be favorable. I\u0027m just concerned about the limitations, as not everybody is a local admin, or has a very recent version of Windows 10 running.\n\nAnyway, if we\u0027re aware of the limitations, properly document them, and agree on choosing Symbolic Links as the (only) implementation on Windows, that\u0027s fine with me.",
      "parentUuid": "b55f3568_ffc3d639",
      "revId": "d5cec5e752821ca2710101b626b3a3ca07fdb7f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}