{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c1bc1e6b_66ba6e4e",
        "filename": "subcmds/sync.py",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1023901
      },
      "writtenOn": "2022-11-10T00:30:19Z",
      "side": 1,
      "message": "Nit: the existing style convention appears to be no prefixing _ for constants? e.g.:\n\nREPO_AUTO_GC \u003d \u0027REPO_AUTO_GC\u0027\n_AUTO_GC \u003d os.environ.get(REPO_AUTO_GC) \u003d\u003d \u00271\u0027",
      "revId": "b01071da399094eb9a064cd93ad831b7aac0228f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7e3d36f_7a76dda9",
        "filename": "subcmds/sync.py",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1133306
      },
      "writtenOn": "2022-11-10T00:37:27Z",
      "side": 1,
      "message": "Sam rightly pointed out that it should have the underscore, which makes REPO_BACKUP_OBJECTS the non-conforming variable.\n\nThat said, there are also:\n\n - envvars that are \"just a string deep in the code\" (e.g., REPO_HOST_PORT_INFO)\n - other examples of both (GENERATE_MANPAGES vs _ALTERNATES)\n \nOnce we sort out the correct style, we can go fix all of the various places to be consistent.",
      "parentUuid": "c1bc1e6b_66ba6e4e",
      "revId": "b01071da399094eb9a064cd93ad831b7aac0228f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd2db35c_5269f83f",
        "filename": "subcmds/sync.py",
        "patchSetId": 2
      },
      "lineNbr": 1226,
      "author": {
        "id": 1023901
      },
      "writtenOn": "2022-11-10T00:30:19Z",
      "side": 1,
      "message": "And here..",
      "range": {
        "startLine": 1226,
        "startChar": 48,
        "endLine": 1226,
        "endChar": 49
      },
      "revId": "b01071da399094eb9a064cd93ad831b7aac0228f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1ea0636_e9da814d",
        "filename": "subcmds/sync.py",
        "patchSetId": 2
      },
      "lineNbr": 1226,
      "author": {
        "id": 1133306
      },
      "writtenOn": "2022-11-10T00:37:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cd2db35c_5269f83f",
      "range": {
        "startLine": 1226,
        "startChar": 48,
        "endLine": 1226,
        "endChar": 49
      },
      "revId": "b01071da399094eb9a064cd93ad831b7aac0228f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b01071da399094eb9a064cd93ad831b7aac0228f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b01071da399094eb9a064cd93ad831b7aac0228f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "b01071da399094eb9a064cd93ad831b7aac0228f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b01071da399094eb9a064cd93ad831b7aac0228f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b01071da399094eb9a064cd93ad831b7aac0228f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}