{
  "comments": [
    {
      "key": {
        "uuid": "1420538c_97a1728c",
        "filename": "event_log.py",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 1004651
      },
      "writtenOn": "2017-12-13T13:35:19Z",
      "side": 1,
      "message": "is this a good idea to use a tuple for an id?\n\nIf you push that event to elasticsearch via logstash for review in kibana, then elastic search will get an array with items of different kind, which it does not like.\n\nI would rather use:\n\n    \u0027id\u0027: kind + \u0027-\u0027 + str(self._next_id.next())\n    \u0027kind\u0027: kind  # also store the kind, for easy filtering by kind",
      "revId": "e0684addeeb920ddf83168d5fbbbe50cb9287abd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34ca2a55_b43095e8",
        "filename": "event_log.py",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 1038187
      },
      "writtenOn": "2017-12-13T16:06:00Z",
      "side": 1,
      "message": "This is what the Chrome OS export tool expects (https://chromium.googlesource.com/chromiumos/chromite/+/master/scripts/export_to_gcloud.py). \n\nIf this is unacceptable, I\u0027d prefer id to just be str(self._next_id.next()) and then change our internal tooling to recognize the presence of a separate kind key.",
      "parentUuid": "1420538c_97a1728c",
      "revId": "e0684addeeb920ddf83168d5fbbbe50cb9287abd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5844b2c_810f7152",
        "filename": "event_log.py",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 1004651
      },
      "writtenOn": "2017-12-13T19:32:19Z",
      "side": 1,
      "message": "ok for:\n\n    \u0027id\u0027: str(self._next_id.next())\n    \u0027kind\u0027: kind  # also store the kind, for easy filtering by kind",
      "parentUuid": "34ca2a55_b43095e8",
      "revId": "e0684addeeb920ddf83168d5fbbbe50cb9287abd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1586fff_162e84bd",
        "filename": "event_log.py",
        "patchSetId": 8
      },
      "lineNbr": 104,
      "author": {
        "id": 1004651
      },
      "writtenOn": "2017-12-13T10:58:04Z",
      "side": 1,
      "message": "This call to add is sending the parameters in the wrong order.\n\nsignature is:\n\nAdd(self, name, task_name, start, finish\u003dNone, success\u003dNone, try_count\u003d1, kind\u003d\u0027RepoOp\u0027)\n\nso the sync events will get a switched task_name and success",
      "revId": "e0684addeeb920ddf83168d5fbbbe50cb9287abd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bea57c18_07446135",
        "filename": "event_log.py",
        "patchSetId": 8
      },
      "lineNbr": 104,
      "author": {
        "id": 1038187
      },
      "writtenOn": "2017-12-13T16:06:00Z",
      "side": 1,
      "message": "Nice catch.",
      "parentUuid": "a1586fff_162e84bd",
      "revId": "e0684addeeb920ddf83168d5fbbbe50cb9287abd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13e9d767_1802ece4",
        "filename": "event_log.py",
        "patchSetId": 8
      },
      "lineNbr": 104,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-12-14T04:40:17Z",
      "side": 1,
      "message": "Fixed in https://gerrit-review.googlesource.com/#/c/git-repo/+/148130",
      "parentUuid": "bea57c18_07446135",
      "revId": "e0684addeeb920ddf83168d5fbbbe50cb9287abd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc685f0c_46348885",
        "filename": "event_log.py",
        "patchSetId": 8
      },
      "lineNbr": 142,
      "author": {
        "id": 1004651
      },
      "writtenOn": "2017-12-13T13:35:19Z",
      "side": 1,
      "message": "I would prefer to store the total_time. It avoids further processing later.",
      "revId": "e0684addeeb920ddf83168d5fbbbe50cb9287abd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f8285da_336a1db3",
        "filename": "event_log.py",
        "patchSetId": 8
      },
      "lineNbr": 142,
      "author": {
        "id": 1038187
      },
      "writtenOn": "2017-12-13T16:06:00Z",
      "side": 1,
      "message": "I\u0027m find with adding that.  We always post-process this and calculate elapsed_time during presentation of the data, but for straight reading of the data I can see that it\u0027d be useful.",
      "parentUuid": "cc685f0c_46348885",
      "revId": "e0684addeeb920ddf83168d5fbbbe50cb9287abd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caeb1dd2_aa37ca74",
        "filename": "event_log.py",
        "patchSetId": 8
      },
      "lineNbr": 142,
      "author": {
        "id": 1004651
      },
      "writtenOn": "2017-12-13T19:32:19Z",
      "side": 1,
      "message": "This will allow indeed easier management in ELK (no need to use calculated fields)",
      "parentUuid": "3f8285da_336a1db3",
      "revId": "e0684addeeb920ddf83168d5fbbbe50cb9287abd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}