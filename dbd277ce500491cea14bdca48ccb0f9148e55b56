{
  "comments": [
    {
      "key": {
        "uuid": "8244e503_e545261c",
        "filename": "subcmds/forall.py",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2020-02-06T18:41:27Z",
      "side": 0,
      "message": "just put .decode(\u0027utf-8\u0027) here",
      "revId": "dbd277ce500491cea14bdca48ccb0f9148e55b56",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a17688cd_a3330e33",
        "filename": "subcmds/forall.py",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 1033217
      },
      "writtenOn": "2020-02-07T12:14:53Z",
      "side": 0,
      "message": "When I do this change, I\u0027m getting:\n\nAttributeError: \u0027str\u0027 object has no attribute \u0027decode\u0027",
      "parentUuid": "8244e503_e545261c",
      "revId": "dbd277ce500491cea14bdca48ccb0f9148e55b56",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "402e6602_919250ad",
        "filename": "subcmds/forall.py",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2020-02-07T19:46:04Z",
      "side": 0,
      "message": "that doesn\u0027t really make sense.  if you can use buf.decode() below unconditionally, then you can use s.read().decode() here.\n\nsubprocess.Popen would create both stdout \u0026 stderr as binary so s.read() should always return bytes, not str.\n\ni tried it over here and it worked fine.",
      "parentUuid": "a17688cd_a3330e33",
      "revId": "dbd277ce500491cea14bdca48ccb0f9148e55b56",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32e75eea_99f8391a",
        "filename": "subcmds/forall.py",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 1033217
      },
      "writtenOn": "2020-02-10T00:32:28Z",
      "side": 0,
      "message": "It was the second decode() I left there which was throwing the exception. Should be fixed in the patchset 3.",
      "parentUuid": "402e6602_919250ad",
      "revId": "dbd277ce500491cea14bdca48ccb0f9148e55b56",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}