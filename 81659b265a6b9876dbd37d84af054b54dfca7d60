{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cdfa0dec_efe7638b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-12-05T17:53:40Z",
      "side": 1,
      "message": "I looked at this introducing change a bit more and I\u0027m a bit concerned it was an intentional change to support non-existent sources (maybe @apetkov86@gmail.com can clarify?). However, if so, that\u0027s a change of behavior from 5 years prior to that change since the existence check was added in [change 68241](https://gerrit-review.googlesource.com/c/git-repo/+/68241). Both of those had a risk of breaking existing users, as does this change.\n\nGiven that, I think you want to phrase this as a sentence and refer to both changes by number and explain how the newer change causes a regression for some users:\n```\nThis issue was introduced by change 265736 which modified the behavior\nintroduced as a side effect of change 68241. Thus, from 2008 until June\n2015 links from non-existent files would be created, then from June 2015\nuntil May 2020 links would not be created, and then since May 2020 links\nare created. This change returns to the 2015-2020 behavior.\n```\n\n@sokcevic@google.com and @gavinmak@google.com do you know if there are clients expecting to create links from non-existent files? If there are any, we probably want to control this behavior with a command line flag.",
      "revId": "81659b265a6b9876dbd37d84af054b54dfca7d60",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17baa63e_2753caf9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1096638
      },
      "writtenOn": "2024-12-05T18:07:00Z",
      "side": 1,
      "message": "I don\u0027t know if there\u0027s such need, but my guess would be no.\n\nStepping back a bit, I don\u0027t like the idea of silently ignoring link directives. If manifest contains a link entry and the file doesn\u0027t exist, I feel repo should still create it, or at least error out.\n\nCould you elaborate a bit more, in the commit message, why this change is desired?",
      "parentUuid": "cdfa0dec_efe7638b",
      "revId": "81659b265a6b9876dbd37d84af054b54dfca7d60",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94e91f06_ce0a12d9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-12-05T18:37:58Z",
      "side": 1,
      "message": "\u003e I don\u0027t know if there\u0027s such need, but my guess would be no.\n\nAck.\n\n\u003e \n\u003e Stepping back a bit, I don\u0027t like the idea of silently ignoring link directives. If manifest contains a link entry and the file doesn\u0027t exist, I feel repo should still create it, or at least error out.\n\nThat makes sense to me too. I think different behavior would be ok if we make it something the user opts into (like a `--skip-non-existent-src-links`). Would that make sense to you?\n\n\u003e \n\u003e Could you elaborate a bit more, in the commit message, why this change is desired?\n\nThe simple answer (that we can also add to the commit message) is that we have some teams that were pinned to an old repo version (in that 2015-2020 timeframe) and are finally trying to update, but they have older manifest files they don\u0027t want to have new (breaking) behavior with. Having the links created results in invalid workspaces for them, so they want a way to avoid that in a new repo version.",
      "parentUuid": "17baa63e_2753caf9",
      "revId": "81659b265a6b9876dbd37d84af054b54dfca7d60",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12aee43b_cbbd967e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2024-12-05T18:56:15Z",
      "side": 1,
      "message": "\u003e \u003e I don\u0027t know if there\u0027s such need, but my guess would be no.\n\u003e \n\u003e Ack.\n\u003e \n\u003e \u003e \n\u003e \u003e Stepping back a bit, I don\u0027t like the idea of silently ignoring link directives. If manifest contains a link entry and the file doesn\u0027t exist, I feel repo should still create it, or at least error out.\n\u003e \n\u003e That makes sense to me too. I think different behavior would be ok if we make it something the user opts into (like a `--skip-non-existent-src-links`). Would that make sense to you?\n\n+1\n\n\u003e \n\u003e \u003e \n\u003e \u003e Could you elaborate a bit more, in the commit message, why this change is desired?\n\u003e \n\u003e The simple answer (that we can also add to the commit message) is that we have some teams that were pinned to an old repo version (in that 2015-2020 timeframe) and are finally trying to update, but they have older manifest files they don\u0027t want to have new (breaking) behavior with. Having the links created results in invalid workspaces for them, so they want a way to avoid that in a new repo version.",
      "parentUuid": "94e91f06_ce0a12d9",
      "revId": "81659b265a6b9876dbd37d84af054b54dfca7d60",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f69c72fd_325e7891",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1096638
      },
      "writtenOn": "2024-12-05T19:30:54Z",
      "side": 1,
      "message": "\u003e That makes sense to me too. I think different behavior would be ok if we make it something the user opts into (like a --skip-non-existent-src-links). Would that make sense to you?\n\nI would avoid adding a opt-in flag since it\u0027s very hard to remove it later on - we don\u0027t know if there is any usage, and when it\u0027s safe to remove.\n\nI believe the existing repo behavior is correct, and with that said, we should not be changing it. Extending it is fine, but I feel it will result in the same amount of work as changing the manifest (more on that below).\n\n\u003e  they have older manifest files they don\u0027t want to have new (breaking) behavior with.\n\nI suppose updating those manifests is not trivial work, is it? Are there any post-sync scripts / pre-build scripts that can cleanup broken symlinks for such broken manifest?",
      "parentUuid": "12aee43b_cbbd967e",
      "revId": "81659b265a6b9876dbd37d84af054b54dfca7d60",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "628f0f72_e5b3d60e",
        "filename": "project.py",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2024-12-05T18:56:15Z",
      "side": 1,
      "message": "```suggestion\n\n        if not glob.has_magic(src):\n            if os.path.exists(src):\n                # Entity does not contain a wild card so just a simple one to one\n                # link operation.\n                dest \u003d _SafeExpandPath(self.topdir, self.dest, skipfinal\u003dTrue)\n                # dest \u0026 src are absolute paths at this point.  Make sure the target\n                # of the symlink is relative in the context of the repo client\n                # checkout.\n                relpath \u003d os.path.relpath(src, os.path.dirname(dest))\n                self.__linkIt(relpath, dest)\n```",
      "range": {
        "startLine": 490,
        "startChar": 0,
        "endLine": 500,
        "endChar": 44
      },
      "revId": "81659b265a6b9876dbd37d84af054b54dfca7d60",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d87d3642_c4088439",
        "filename": "project.py",
        "patchSetId": 1
      },
      "lineNbr": 523,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2024-12-05T18:56:15Z",
      "side": 1,
      "message": "You will need a similar check here too?",
      "revId": "81659b265a6b9876dbd37d84af054b54dfca7d60",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}