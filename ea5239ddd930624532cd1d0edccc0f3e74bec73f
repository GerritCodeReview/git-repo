{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "eb4b4e06_097377c5",
        "filename": "tests/test_project.py",
        "patchSetId": 11
      },
      "lineNbr": 483,
      "author": {
        "id": 1101846
      },
      "writtenOn": "2022-12-04T11:57:07Z",
      "side": 1,
      "message": "These 4 `assertEquals` should be `assertEqual`.\nhttps://docs.python.org/3/library/unittest.html#deprecated-aliases",
      "revId": "ea5239ddd930624532cd1d0edccc0f3e74bec73f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d15fee2_65e76e9d",
        "filename": "tests/test_project.py",
        "patchSetId": 11
      },
      "lineNbr": 483,
      "author": {
        "id": 1101846
      },
      "writtenOn": "2022-12-05T12:08:20Z",
      "side": 1,
      "message": "Fixed in https://gerrit-review.googlesource.com/c/git-repo/+/354035",
      "parentUuid": "eb4b4e06_097377c5",
      "revId": "ea5239ddd930624532cd1d0edccc0f3e74bec73f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e859f47_5bbb669f",
        "filename": "tests/test_project.py",
        "patchSetId": 11
      },
      "lineNbr": 483,
      "author": {
        "id": 1023872
      },
      "writtenOn": "2022-12-05T16:55:08Z",
      "side": 1,
      "message": "Let\u0027s figure out a way to detect this automatically during our test runs to ensure we automate this lint vs having humans drive it.",
      "parentUuid": "4d15fee2_65e76e9d",
      "revId": "ea5239ddd930624532cd1d0edccc0f3e74bec73f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afbc3755_cd82267d",
        "filename": "tests/test_project.py",
        "patchSetId": 11
      },
      "lineNbr": 483,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2022-12-05T17:25:14Z",
      "side": 1,
      "message": "the ZUUL pipeline is supposed to provide CQ coverage.  but the Gerrit ZUUL configs lack good documentation explaining how it actually works.  so we have no CQ coverage.",
      "parentUuid": "8e859f47_5bbb669f",
      "revId": "ea5239ddd930624532cd1d0edccc0f3e74bec73f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}